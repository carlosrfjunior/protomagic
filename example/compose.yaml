services:
  db_pg:
    image: postgres
    restart: always
    shm_size: 128mb
    user: postgres
    secrets:
      - db-password
    volumes:
      - db-pg-data:/var/lib/postgresql/data
      - ./scripts/postgresql:/docker-entrypoint-initdb.d/
    environment:
      - POSTGRES_DB=protomagic
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    ports:
      - 5432:5432
    expose:
      - 5432
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - db-net
  db_mysql:
    image: mysql
    restart: always
    shm_size: 128mb
    user: mysql
    secrets:
      - db-password
    volumes:
      - db-mysql-data:/var/lib/mysql
      - ./scripts/mysql:/docker-entrypoint-initdb.d/
    environment:
      - MYSQL_DATABASE=protomagic
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db-password
    ports:
      - 3306:3306
      - 33060:33060
    expose:
      - 3306
      - 33060
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-ppass"]
      interval: 5s
      timeout: 5s
      retries: 20
    networks:
      - db-net
  pgadmin4:
    image: dpage/pgadmin4
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=dev@local.com
      - PGADMIN_DEFAULT_PASSWORD=Aa1234
      - POSTGRES_PASSWORD=12345
      - PGADMIN_SERVER_JSON_FILE=/pgadmin4/servers.json
    configs:
      - source: servers.json
        target: /pgadmin4/servers.json
    ports:
      - 5050:80
    depends_on:
      db_pg:
        condition: service_healthy
    networks:
      - db-net
volumes:
  db-pg-data:
  db-mysql-data:
  db-bytebase-data:

secrets:
  db-password:
    file: configs/db-password.txt

networks:
  db-net:
    driver: bridge

configs:
  servers.json:
    content: |
      {
          "Servers": {
              "1": {
                  "Name": "pgProtoMagic",
                  "Group": "Servers",
                  "Host": "db_pg",
                  "Port": 5432,
                  "MaintenanceDB": "protomagic",
                  "Username": "postgres",
                  "UseSSHTunnel": 0,
                  "TunnelPort": "22",
                  "TunnelAuthentication": 0,
                  "KerberosAuthentication": false,
                  "ConnectionParameters": {
                      "sslmode": "prefer",
                      "connect_timeout": 10,
                      "sslcert": "<STORAGE_DIR>/.postgresql/postgresql.crt",
                      "sslkey": "<STORAGE_DIR>/.postgresql/postgresql.key"
                  }
              }
          }
      }
